@page "/patient/dashboard"
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Patient")]
@using Clinix.Application.Dtos
@using Clinix.Application.Dtos.Patient
@using Clinix.Web.Services
@inject IPatientDashboardUiService DashboardUiService
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavigationManager
@inject Blazored.Toast.Services.IToastService ToastService

<div class="patient-dashboard-page">

    <div class="page-header">
        <div>
            <h1 class="page-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                    <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319z"/>
                </svg>
                My Dashboard
            </h1>
            <p class="page-subtitle">View and manage your health information</p>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="loading-container">
            <div class="spinner-border text-primary" role="status"></div>
            <p class="mt-3 text-muted">Loading your dashboard...</p>
        </div>
    }
    else if (dashboard == null)
    {
        <div class="alert alert-warning">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
            </svg>
            Could not load dashboard. If this continues, contact support.
        </div>
    }
    else
    {
        <div class="dashboard-grid">
            
            <div class="left-column">
              
                <div class="card profile-card">
                    <div class="card-body">
                        <div class="profile-header">
                            <div class="avatar-container">
                                <div class="avatar-circle">
                                    @dashboard.FullName?.Split(' ').Select(s => s.FirstOrDefault()).Take(2).Aggregate("", (a,b) => a + (b==null?"":b.ToString()))
                                </div>
                            </div>
                            <div class="profile-info">
                                <h4 class="profile-name">@dashboard.FullName</h4>
                                <p class="profile-id">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                        <path d="M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2zm13 2.383-4.708 2.825L15 11.105V5.383zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741zM1 11.105l4.708-2.897L1 5.383v5.722z"/>
                                    </svg>
                                    Patient ID: @dashboard.UserId
                                </p>
                                <div class="contact-info">
                                    <div class="contact-item">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                            <path d="M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328z"/>
                                        </svg>
                                        @dashboard.Phone
                                    </div>
                                    <div class="contact-item">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                            <path d="M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2z"/>
                                        </svg>
                                        @dashboard.Email
                                    </div>
                                </div>
                            </div>
                            <button class="btn btn-primary edit-profile-btn" @onclick="GoEdit">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5z"/>
                                </svg>
                                Edit Profile
                            </button>
                        </div>
                    </div>
                </div>

                <div class="card summary-card">
                    <div class="card-header">
                        <h5 class="card-header-title">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
                                <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z"/>
                            </svg>
                            Profile Summary
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="summary-grid">
                            <div class="summary-item">
                                <span class="summary-label">Date of Birth</span>
                                <span class="summary-value">@((dashboard.DateOfBirth?.ToString("MMM dd, yyyy")) ?? "Not provided")</span>
                            </div>
                            <div class="summary-item">
                                <span class="summary-label">Gender</span>
                                <span class="summary-value">@(dashboard.Gender ?? "Not provided")</span>
                            </div>
                            <div class="summary-item">
                                <span class="summary-label">Blood Group</span>
                                <span class="summary-value">@(dashboard.BloodGroup ?? "Not provided")</span>
                            </div>
                            <div class="summary-item">
                                <span class="summary-label">Emergency Contact</span>
                                <span class="summary-value">@((dashboard.EmergencyContactName != null ? $"{dashboard.EmergencyContactName} ({dashboard.EmergencyContactNumber})" : "Not provided"))</span>
                            </div>
                            <div class="summary-item summary-item-full">
                                <span class="summary-label">Known Allergies</span>
                                <span class="summary-value">@(dashboard.KnownAllergies ?? "None")</span>
                            </div>
                            <div class="summary-item summary-item-full">
                                <span class="summary-label">Existing Conditions</span>
                                <span class="summary-value">@(dashboard.ExistingConditions ?? "None")</span>
                            </div>
                            <div class="summary-item">
                                <span class="summary-label">Profile Status</span>
                                <span class="summary-value">
                                    @if (dashboard.IsProfileCompleted)
                                    {
                                        <span class="badge badge-success">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" viewBox="0 0 16 16">
                                                <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"/>
                                            </svg>
                                            Completed
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-warning">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" viewBox="0 0 16 16">
                                                <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
                                            </svg>
                                            Incomplete
                                        </span>
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="right-column">
                <div class="card quick-actions-card">
                    <div class="card-header">
                        <h5 class="card-header-title">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z"/>
                            </svg>
                            Quick Actions
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="quick-actions-grid">
                            <button class="action-button" @onclick="GoEdit">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                                    <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10z"/>
                                </svg>
                                <span class="action-label">Edit Profile</span>
                            </button>
                            <button class="action-button action-button-disabled" disabled>
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                                    <path d="M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z"/>
                                    <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5z"/>
                                </svg>
                                <span class="action-label">View Appointments</span>
                                <span class="coming-soon">Coming Soon</span>
                            </button>
                            <button class="action-button action-button-disabled" disabled>
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                                    <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                                    <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                                </svg>
                                <span class="action-label">View Follow-ups</span>
                                <span class="coming-soon">Coming Soon</span>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="card activity-card">
                    <div class="card-header">
                        <h5 class="card-header-title">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                                <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                            </svg>
                            Recent Activity
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="empty-activity">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
                                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                            </svg>
                            <p class="empty-activity-text">No recent activity to show</p>
                            <p class="empty-activity-subtext">Appointment and follow-up modules will appear here once enabled</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>

    .patient-dashboard-page {
        padding: var(--clx-spacing-lg);
        max-width: 1400px;
        margin: 0 auto;
    }

    .page-header {
        margin-bottom: var(--clx-spacing-xl);
    }

    .page-title {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-sm);
        margin: 0 0 var(--clx-spacing-xs) 0;
        color: var(--clx-gray-900);
        font-size: 1.75rem;
    }

    .page-title svg {
        color: var(--clx-primary);
    }

    .page-subtitle {
        color: var(--clx-gray-600);
        font-size: 0.875rem;
        margin: 0;
    }

    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: var(--clx-spacing-2xl);
        text-align: center;
    }

    .dashboard-grid {
        display: grid;
        grid-template-columns: 1fr 400px;
        gap: var(--clx-spacing-lg);
    }

    .left-column,
    .right-column {
        display: flex;
        flex-direction: column;
        gap: var(--clx-spacing-lg);
    }

    .profile-card {
        box-shadow: var(--clx-shadow-md);
    }

    .profile-header {
        display: flex;
        gap: var(--clx-spacing-lg);
        align-items: flex-start;
    }

    .avatar-container {
        flex-shrink: 0;
    }

    .avatar-circle {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--clx-primary) 0%, var(--clx-primary-hover) 100%);
        color: var(--clx-white);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: 600;
        box-shadow: var(--clx-shadow-md);
    }

    .profile-info {
        flex: 1;
    }

    .profile-name {
        margin: 0 0 var(--clx-spacing-xs) 0;
        color: var(--clx-gray-900);
        font-size: 1.25rem;
        font-weight: 600;
    }

    .profile-id {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-xs);
        margin: 0 0 var(--clx-spacing-md) 0;
        color: var(--clx-gray-600);
        font-size: 0.875rem;
    }

    .profile-id svg {
        color: var(--clx-primary);
    }

    .contact-info {
        display: flex;
        flex-direction: column;
        gap: var(--clx-spacing-xs);
    }

    .contact-item {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-xs);
        color: var(--clx-gray-700);
        font-size: 0.875rem;
    }

    .contact-item svg {
        color: var(--clx-primary);
    }

    .edit-profile-btn {
        flex-shrink: 0;
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-xs);
    }

    .summary-card {
        box-shadow: var(--clx-shadow-md);
    }

    .summary-card .card-header {
        background-color: var(--clx-gray-50);
        border-bottom: 2px solid var(--clx-gray-200);
        padding: var(--clx-spacing-lg);
    }

    .card-header-title {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-sm);
        margin: 0;
        font-size: 1.125rem;
        font-weight: 600;
        color: var(--clx-gray-900);
    }

    .card-header-title svg {
        color: var(--clx-primary);
    }

    .summary-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: var(--clx-spacing-md);
    }

    .summary-item {
        display: flex;
        flex-direction: column;
        gap: var(--clx-spacing-xs);
        padding: var(--clx-spacing-md);
        background-color: var(--clx-gray-50);
        border-radius: var(--clx-radius-md);
    }

    .summary-item-full {
        grid-column: 1 / -1;
    }

    .summary-label {
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        color: var(--clx-gray-600);
    }

    .summary-value {
        font-size: 0.9375rem;
        color: var(--clx-gray-900);
        font-weight: 500;
    }

    .badge-success {
        display: inline-flex;
        align-items: center;
        gap: var(--clx-spacing-xs);
        background-color: var(--clx-success);
        color: var(--clx-white);
        padding: var(--clx-spacing-xs) var(--clx-spacing-sm);
        border-radius: var(--clx-radius-sm);
        font-size: 0.8125rem;
        font-weight: 600;
    }

    .badge-warning {
        display: inline-flex;
        align-items: center;
        gap: var(--clx-spacing-xs);
        background-color: var(--clx-warning);
        color: #856404;
        padding: var(--clx-spacing-xs) var(--clx-spacing-sm);
        border-radius: var(--clx-radius-sm);
        font-size: 0.8125rem;
        font-weight: 600;
    }

    .quick-actions-card {
        box-shadow: var(--clx-shadow-md);
    }

    .quick-actions-card .card-header {
        background-color: var(--clx-gray-50);
        border-bottom: 2px solid var(--clx-gray-200);
        padding: var(--clx-spacing-lg);
    }

    .quick-actions-grid {
        display: flex;
        flex-direction: column;
        gap: var(--clx-spacing-sm);
    }

    .action-button {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--clx-spacing-sm);
        padding: var(--clx-spacing-lg);
        background-color: var(--clx-white);
        border: 2px solid var(--clx-primary);
        border-radius: var(--clx-radius-md);
        cursor: pointer;
        transition: all var(--clx-transition-normal);
        position: relative;
    }

    .action-button:hover:not(:disabled) {
        background-color: var(--clx-primary-light);
        border-color: var(--clx-primary-hover);
        transform: translateY(-2px);
        box-shadow: var(--clx-shadow-md);
    }

    .action-button svg {
        color: var(--clx-primary);
    }

    .action-label {
        font-weight: 600;
        color: var(--clx-gray-900);
    }

    .action-button-disabled {
        border-color: var(--clx-gray-300);
        cursor: not-allowed;
        opacity: 0.6;
    }

    .action-button-disabled svg {
        color: var(--clx-gray-500);
    }

    .coming-soon {
        position: absolute;
        top: var(--clx-spacing-xs);
        right: var(--clx-spacing-xs);
        font-size: 0.625rem;
        background-color: var(--clx-warning);
        color: #856404;
        padding: 2px var(--clx-spacing-xs);
        border-radius: var(--clx-radius-sm);
        font-weight: 600;
    }

    .activity-card {
        box-shadow: var(--clx-shadow-md);
    }

    .activity-card .card-header {
        background-color: var(--clx-gray-50);
        border-bottom: 2px solid var(--clx-gray-200);
        padding: var(--clx-spacing-lg);
    }

    .empty-activity {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        padding: var(--clx-spacing-xl);
    }

    .empty-activity svg {
        color: var(--clx-gray-400);
        margin-bottom: var(--clx-spacing-md);
    }

    .empty-activity-text {
        font-weight: 600;
        color: var(--clx-gray-700);
        margin-bottom: var(--clx-spacing-xs);
    }

    .empty-activity-subtext {
        font-size: 0.875rem;
        color: var(--clx-gray-600);
        margin: 0;
    }

    @@media (max-width: 1024px) {
        .dashboard-grid {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 768px) {
        .patient-dashboard-page {
            padding: var(--clx-spacing-md);
        }

        .profile-header {
            flex-direction: column;
            text-align: center;
        }

        .avatar-container {
            align-self: center;
        }

        .profile-info {
            text-align: center;
        }

        .contact-info {
            align-items: center;
        }

        .edit-profile-btn {
            width: 100%;
        }

        .summary-grid {
            grid-template-columns: 1fr;
        }

        .summary-item-full {
            grid-column: 1;
        }
    }
</style>

@code {
    private PatientDashboardDto? dashboard;
    private bool isLoading = true;
    private CancellationTokenSource? cts;

    protected override async Task OnInitializedAsync()
    {
        cts = new CancellationTokenSource();
        isLoading = true;

        try
        {
            var auth = await AuthProvider.GetAuthenticationStateAsync();
            var user = auth.User;
            if (!(user.Identity?.IsAuthenticated ?? false))
            {
                NavigationManager.NavigateTo("/login");
                return;
            }

            var idClaim = user.FindFirst("UserId") ?? user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
            if (idClaim == null || !long.TryParse(idClaim.Value, out var userId))
            {
                ToastService.ShowError("Unable to identify your account. Please login again.");
                NavigationManager.NavigateTo("/login", forceLoad: true);
                return;
            }

            dashboard = await DashboardUiService.GetDashboardAsync(userId, cts.Token);
        }
        catch (OperationCanceledException) { /* ignore */ }
        catch (Exception ex)
        {
            ToastService.ShowError("Failed to load dashboard. Please try again later.");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoEdit()
    {
        NavigationManager.NavigateTo("/patient/edit-profile");
    }

    public void Dispose()
    {
        if (cts != null)
        {
            cts.Cancel();
            cts.Dispose();
            cts = null;
        }
    }
}
