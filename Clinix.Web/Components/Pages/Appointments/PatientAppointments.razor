@page "/appointments/patient"
@rendermode InteractiveServer
@using Clinix.Application.DTOs
@using Clinix.Application.Interfaces
@using Clinix.Domain.Enums
@using Clinix.Web.Services
@inject IAppointmentAppService AppointmentService
@inject ICurrentUserService CurrentUser
@inject NavigationManager Navigation

<div class="patient-appointments-page">
    <!-- Page Header -->
    <div class="page-header">
        <div>
            <h1 class="page-title">
                <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-5 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z"/>
                    <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z"/>
                </svg>
                My Appointments
            </h1>
            <p class="page-subtitle">View and manage your medical appointments</p>
        </div>
        <a href="/appointments/schedule" class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
            </svg>
            Book New Appointment
        </a>
    </div>

    @if (!_authorized)
    {
        <div class="alert alert-danger">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z"/>
            </svg>
            <strong>Access Denied</strong> - You are not authorized to view this page. Please log in as a patient.
        </div>
    }
    else if (Items is null)
    {
        <div class="loading-container">
            <div class="spinner-border text-primary" role="status"></div>
            <p class="mt-3 text-muted">Loading your appointments...</p>
        </div>
    }
    else if (Items.Count == 0)
    {
        <div class="card empty-state-card">
            <div class="card-body">
                <svg class="empty-icon" xmlns="http://www.w3.org/2000/svg" width="80" height="80" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-5 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z"/>
                    <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z"/>
                </svg>
                <h5 class="empty-title">No appointments found</h5>
                <p class="empty-subtitle">You haven't booked any appointments yet. Get started by scheduling your first appointment.</p>
                <a href="/appointments/schedule" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                    </svg>
                    Book Your First Appointment
                </a>
            </div>
        </div>
    }
    else
    {
        <!-- Filter Tabs -->
        <div class="filter-tabs">
            <button class="filter-tab @(_filterStatus == "All" ? "active" : "")" 
                    @onclick="@(() => FilterByStatus("All"))">
                <span class="tab-label">All</span>
                <span class="tab-count">@Items.Count</span>
            </button>
            <button class="filter-tab @(_filterStatus == "Upcoming" ? "active" : "")" 
                    @onclick="@(() => FilterByStatus("Upcoming"))">
                <span class="tab-label">Upcoming</span>
                <span class="tab-count">@Items.Count(a => a.Status == AppointmentStatus.Pending || a.Status == AppointmentStatus.Scheduled)</span>
            </button>
            <button class="filter-tab @(_filterStatus == "Completed" ? "active" : "")" 
                    @onclick="@(() => FilterByStatus("Completed"))">
                <span class="tab-label">Completed</span>
                <span class="tab-count">@Items.Count(a => a.Status == AppointmentStatus.Completed)</span>
            </button>
            <button class="filter-tab @(_filterStatus == "Cancelled" ? "active" : "")" 
                    @onclick="@(() => FilterByStatus("Cancelled"))">
                <span class="tab-label">Cancelled</span>
                <span class="tab-count">@Items.Count(a => a.Status == AppointmentStatus.Cancelled)</span>
            </button>
        </div>

        @if (FilteredItems.Count == 0)
        {
            <div class="alert alert-info">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                    <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                </svg>
                No @_filterStatus.ToLower() appointments found.
            </div>
        }
        else
        {
            <div class="card">
                <div class="table-responsive">
                    <table class="table appointments-table">
                        <thead>
                            <tr>
                                <th>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                        <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5z"/>
                                    </svg>
                                    Date & Time
                                </th>
                                <th>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                        <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                                        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                                    </svg>
                                    Duration
                                </th>
                                <th>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                        <path d="M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zm8 0A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3z"/>
                                    </svg>
                                    Type
                                </th>
                                <th>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                        <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z"/>
                                    </svg>
                                    Provider
                                </th>
                                <th>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                        <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"/>
                                    </svg>
                                    Status
                                </th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var a in FilteredItems)
                        {
                            <tr>
                                <td>
                                    <div class="datetime-cell">
                                        <div class="date-value">@a.Start.LocalDateTime.ToString("MMM dd, yyyy")</div>
                                        <div class="time-value">@a.Start.LocalDateTime.ToString("hh:mm tt")</div>
                                    </div>
                                </td>
                                <td>
                                    <span class="duration-badge">@((int)(a.End - a.Start).TotalMinutes) min</span>
                                </td>
                                <td>
                                    <span class="type-badge">@a.Type</span>
                                </td>
                                <td>
                                    <span class="provider-id">Provider #@a.ProviderId</span>
                                </td>
                                <td>
                                    <span class="badge badge-@GetStatusColor(a.Status)">@a.Status</span>
                                </td>
                                <td>
                                    <div class="action-buttons-sm">
                                        <a class="btn btn-sm btn-primary" href="/appointments/@a.Id">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                                                <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"/>
                                                <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"/>
                                            </svg>
                                            View
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
</div>

<style>
    /* ============================================
       PATIENT APPOINTMENTS PAGE
       ============================================ */
    .patient-appointments-page {
        padding: var(--clx-spacing-lg);
        max-width: 1400px;
        margin: 0 auto;
    }

    /* ============================================
       PAGE HEADER
       ============================================ */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: var(--clx-spacing-xl);
        gap: var(--clx-spacing-md);
    }

    .page-title {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-sm);
        margin: 0 0 var(--clx-spacing-xs) 0;
        color: var(--clx-gray-900);
        font-size: 1.75rem;
    }

    .page-title svg {
        color: var(--clx-primary);
    }

    .page-subtitle {
        color: var(--clx-gray-600);
        font-size: 0.875rem;
        margin: 0;
    }

    /* ============================================
       LOADING STATE
       ============================================ */
    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: var(--clx-spacing-2xl);
        text-align: center;
    }

    /* ============================================
       EMPTY STATE
       ============================================ */
    .empty-state-card {
        text-align: center;
        box-shadow: var(--clx-shadow-md);
    }

    .empty-state-card .card-body {
        padding: var(--clx-spacing-2xl);
    }

    .empty-icon {
        color: var(--clx-gray-400);
        margin-bottom: var(--clx-spacing-lg);
    }

    .empty-title {
        color: var(--clx-gray-900);
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: var(--clx-spacing-sm);
    }

    .empty-subtitle {
        color: var(--clx-gray-600);
        font-size: 0.875rem;
        margin-bottom: var(--clx-spacing-lg);
        max-width: 500px;
        margin-left: auto;
        margin-right: auto;
    }

    /* ============================================
       FILTER TABS
       ============================================ */
    .filter-tabs {
        display: flex;
        gap: var(--clx-spacing-xs);
        margin-bottom: var(--clx-spacing-lg);
        background-color: var(--clx-white);
        border: 1px solid var(--clx-gray-200);
        border-radius: var(--clx-radius-lg);
        padding: var(--clx-spacing-xs);
        box-shadow: var(--clx-shadow-sm);
    }

    .filter-tab {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--clx-spacing-xs);
        padding: var(--clx-spacing-sm) var(--clx-spacing-md);
        background: transparent;
        border: none;
        border-radius: var(--clx-radius-md);
        cursor: pointer;
        transition: all var(--clx-transition-normal);
        color: var(--clx-gray-600);
        font-weight: 500;
    }

    .filter-tab:hover {
        background-color: var(--clx-gray-50);
        color: var(--clx-gray-900);
    }

    .filter-tab.active {
        background-color: var(--clx-primary);
        color: var(--clx-white);
        box-shadow: var(--clx-shadow-sm);
    }

    .tab-label {
        font-size: 0.875rem;
    }

    .tab-count {
        font-size: 0.75rem;
        font-weight: 600;
        opacity: 0.8;
    }

    /* ============================================
       APPOINTMENTS TABLE
       ============================================ */
    .appointments-table {
        font-size: 0.875rem;
        margin: 0;
    }

    .appointments-table thead {
        background-color: var(--clx-gray-100);
    }

    .appointments-table th {
        font-weight: 600;
        color: var(--clx-gray-700);
        font-size: 0.8125rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        padding: var(--clx-spacing-md);
        border-bottom: 2px solid var(--clx-gray-300);
        white-space: nowrap;
    }

    .appointments-table th svg {
        color: var(--clx-primary);
        margin-right: var(--clx-spacing-xs);
        vertical-align: text-bottom;
    }

    .appointments-table td {
        padding: var(--clx-spacing-md);
        vertical-align: middle;
    }

    .appointments-table tbody tr {
        transition: background-color var(--clx-transition-fast);
    }

    .appointments-table tbody tr:hover {
        background-color: var(--clx-gray-50);
    }

    /* ============================================
       TABLE CELLS
       ============================================ */
    .datetime-cell {
        display: flex;
        flex-direction: column;
        gap: var(--clx-spacing-xs);
    }

    .date-value {
        font-weight: 500;
        color: var(--clx-gray-900);
    }

    .time-value {
        font-size: 0.8125rem;
        color: var(--clx-gray-600);
    }

    .duration-badge {
        display: inline-flex;
        padding: var(--clx-spacing-xs) var(--clx-spacing-sm);
        background-color: var(--clx-gray-100);
        border-radius: var(--clx-radius-sm);
        font-size: 0.8125rem;
        color: var(--clx-gray-700);
        font-weight: 500;
    }

    .type-badge {
        display: inline-flex;
        padding: var(--clx-spacing-xs) var(--clx-spacing-sm);
        background-color: var(--clx-gray-100);
        border: 1px solid var(--clx-gray-300);
        border-radius: var(--clx-radius-sm);
        font-size: 0.8125rem;
        color: var(--clx-gray-900);
        font-weight: 500;
    }

    .provider-id {
        font-size: 0.8125rem;
        color: var(--clx-gray-600);
    }

    /* ============================================
       BADGES
       ============================================ */
    .badge-warning { background-color: var(--clx-warning); color: #856404; }
    .badge-info { background-color: var(--clx-info); color: var(--clx-white); }
    .badge-primary { background-color: var(--clx-primary); color: var(--clx-white); }
    .badge-success { background-color: var(--clx-success); color: var(--clx-white); }
    .badge-danger { background-color: var(--clx-danger); color: var(--clx-white); }
    .badge-secondary { background-color: var(--clx-gray-600); color: var(--clx-white); }
    .badge-dark { background-color: var(--clx-gray-800); color: var(--clx-white); }

    /* ============================================
       ACTION BUTTONS
       ============================================ */
    .action-buttons-sm {
        display: flex;
        gap: var(--clx-spacing-xs);
        justify-content: flex-end;
    }

    .btn:hover svg {
        color: currentColor;
    }

    /* ============================================
       ALERTS
       ============================================ */
    .alert {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-sm);
    }

    .alert svg {
        flex-shrink: 0;
    }

    /* ============================================
       RESPONSIVE DESIGN
       ============================================ */
    @@media (max-width: 768px) {
        .patient-appointments-page {
            padding: var(--clx-spacing-md);
        }

        .page-header {
            flex-direction: column;
            align-items: stretch;
        }

        .page-header .btn {
            width: 100%;
        }

        .filter-tabs {
            flex-wrap: wrap;
        }

        .filter-tab {
            flex: 1 1 calc(50% - var(--clx-spacing-xs));
            min-width: 120px;
        }

        .tab-label {
            font-size: 0.75rem;
        }

        .appointments-table {
            font-size: 0.75rem;
        }

        .appointments-table th,
        .appointments-table td {
            padding: var(--clx-spacing-xs);
        }

        .appointments-table th svg {
            display: none;
        }
    }

    @@media (max-width: 1024px) {
        .appointments-table th,
        .appointments-table td {
            font-size: 0.8125rem;
        }
    }
</style>

@code {
    private List<AppointmentSummaryDto>? Items;
    private List<AppointmentSummaryDto> FilteredItems => Items?.Where(FilterPredicate).ToList() ?? new();
    
    private bool _authorized;
    private CurrentUserInfo _userInfo = new(false, "", "", "");
    private long _patientId;
    private string _filterStatus = "All";

    protected override async Task OnInitializedAsync()
    {
        _userInfo = await CurrentUser.GetCurrentUserAsync();
        
        if (!_userInfo.IsAuthenticated)
        {
            Navigation.NavigateTo("/login");
            return;
        }

        if (_userInfo.Role != "Patient")
        {
            _authorized = false;
            return;
        }

        _authorized = true;
        
        if (long.TryParse(_userInfo.PatientId, out var patientId))
        {
            _patientId = patientId;
            await LoadAppointmentsAsync();
        }
        else
        {
            _authorized = false;
        }
    }

    private async Task LoadAppointmentsAsync()
    {
        try
        {
            Items = await AppointmentService.GetByPatientAsync(_patientId);
        }
        catch (Exception)
        {
            Items = new List<AppointmentSummaryDto>();
        }
    }

    private void FilterByStatus(string status)
    {
        _filterStatus = status;
    }

    private bool FilterPredicate(AppointmentSummaryDto a) => _filterStatus switch
    {
        "Upcoming" => a.Status == AppointmentStatus.Pending || a.Status == AppointmentStatus.Scheduled,
        "Completed" => a.Status == AppointmentStatus.Completed,
        "Cancelled" => a.Status == AppointmentStatus.Cancelled,
        _ => true
    };

    private string GetStatusColor(AppointmentStatus status) => status switch
    {
        AppointmentStatus.Pending => "warning",
        AppointmentStatus.Confirmed => "info",
        AppointmentStatus.Scheduled => "primary",
        AppointmentStatus.Completed => "success",
        AppointmentStatus.Cancelled => "danger",
        AppointmentStatus.Rescheduled => "secondary",
        AppointmentStatus.NoShow => "dark",
        AppointmentStatus.Rejected => "danger",
        _ => "secondary"
    };
}
