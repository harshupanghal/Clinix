@page "/login"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@inject ILogger<Login> Logger
@inject Application.Interfaces.Functionalities.IAuthenticationService _authService
@inject Blazored.Toast.Services.IToastService ToastService

<div class="login-page">
    <div class="login-container">
        
        <!-- App Branding -->
        <div class="login-branding">
            <div class="brand-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="currentColor" viewBox="0 0 16 16">
                    <path d="M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z"/>
                </svg>
            </div>
            <h1 class="brand-name">Clinix</h1>
            <p class="brand-tagline">Welcome back! Please sign in to continue.</p>
        </div>

        <!-- Login Form -->
        <EditForm Model="_model" OnValidSubmit="HandleLogin" FormName="Login-Form" class="login-form">
            <DataAnnotationsValidator />
            <ValidationSummary class="validation-summary" />

            <!-- Phone Number Field -->
            <div class="form-group">
                <label for="phone" class="form-label">
                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z"/>
                    </svg>
                    Phone Number
                </label>
                <div class="input-with-icon">
                    <svg class="input-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328z"/>
                    </svg>
                    <InputText id="phone" 
                               class="form-control" 
                               placeholder="Enter your phone number" 
                               @bind-Value="_model.Phone" />
                </div>
            </div>

            <!-- Password Field -->
            <div class="form-group">
                <label for="password" class="form-label">
                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z"/>
                    </svg>
                    Password
                </label>
                <div class="input-with-icon">
                    <svg class="input-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z"/>
                    </svg>
                    <InputText id="password" 
                               type="password" 
                               class="form-control" 
                               placeholder="Enter your password" 
                               @bind-Value="_model.Password" />
                </div>
            </div>

            <!-- Remember Me Checkbox -->
            <div class="remember-me-container">
                <label class="remember-me-label">
                    <InputCheckbox id="remember" class="remember-checkbox" @bind-Value="_model.RememberMe" />
                    <span class="remember-text">Keep me signed in</span>
                </label>
            </div>

            <!-- Submit Button -->
            <button type="submit" 
                    class="btn btn-primary btn-lg submit-button" 
                    disabled="@_isLoading">
                @if (_isLoading)
                {
                    <span class="button-content">
                        <span class="spinner-border spinner-border-sm" role="status"></span>
                        <span>Signing in...</span>
                    </span>
                }
                else
                {
                    <span class="button-content">
                        <span>Sign In</span>
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
                        </svg>
                    </span>
                }
            </button>

            <!-- Register Link -->
            <div class="register-link">
                Don't have an account? 
                <a href="/register">Create one</a>
            </div>
        </EditForm>
    </div>
</div>

<style>
    /* ============================================
       LOGIN PAGE
       ============================================ */
    .login-page {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        background: linear-gradient(135deg, var(--clx-primary-light) 0%, var(--clx-white) 100%);
        padding: var(--clx-spacing-lg);
    }

    .login-container {
        background-color: var(--clx-white);
        border-radius: var(--clx-radius-xl);
        box-shadow: var(--clx-shadow-xl);
        padding: var(--clx-spacing-2xl);
        max-width: 440px;
        width: 100%;
    }

    /* ============================================
       BRANDING
       ============================================ */
    .login-branding {
        text-align: center;
        margin-bottom: var(--clx-spacing-xl);
    }

    .brand-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, var(--clx-primary) 0%, var(--clx-primary-hover) 100%);
        border-radius: 50%;
        margin-bottom: var(--clx-spacing-md);
        box-shadow: var(--clx-shadow-lg);
    }

    .brand-icon svg {
        color: var(--clx-white);
    }

    .brand-name {
        font-size: 2rem;
        font-weight: 700;
        color: var(--clx-gray-900);
        margin-bottom: var(--clx-spacing-xs);
    }

    .brand-tagline {
        color: var(--clx-gray-600);
        font-size: 0.9375rem;
        margin: 0;
    }

    /* ============================================
       LOGIN FORM
       ============================================ */
    .login-form {
        display: flex;
        flex-direction: column;
        gap: var(--clx-spacing-lg);
    }

    .validation-summary {
        background-color: var(--clx-danger-light);
        border: 1px solid var(--clx-danger);
        border-radius: var(--clx-radius-md);
        padding: var(--clx-spacing-md);
        color: var(--clx-danger);
        font-size: 0.875rem;
    }

    /* ============================================
       FORM GROUPS
       ============================================ */
    .form-group {
        display: flex;
        flex-direction: column;
        gap: var(--clx-spacing-sm);
    }

    .form-label {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-xs);
        font-weight: 600;
        font-size: 0.875rem;
        color: var(--clx-gray-700);
    }

    .form-label svg {
        color: var(--clx-primary);
    }

    /* ============================================
       INPUT WITH ICON
       ============================================ */
    .input-with-icon {
        position: relative;
        display: flex;
        align-items: center;
    }

    .input-icon {
        position: absolute;
        left: var(--clx-spacing-md);
        color: var(--clx-gray-500);
        pointer-events: none;
        z-index: 1;
    }

    .input-with-icon .form-control {
        padding-left: calc(var(--clx-spacing-md) + 18px + var(--clx-spacing-sm));
        height: 48px;
        font-size: 0.9375rem;
    }

    .form-control {
        border: 2px solid var(--clx-gray-300);
        border-radius: var(--clx-radius-md);
        transition: all var(--clx-transition-normal);
    }

    .form-control:focus {
        border-color: var(--clx-primary);
        outline: none;
        box-shadow: 0 0 0 3px rgba(var(--clx-primary-rgb), 0.1);
    }

    .form-control::placeholder {
        color: var(--clx-gray-500);
    }

    /* ============================================
       REMEMBER ME
       ============================================ */
    .remember-me-container {
        margin-top: calc(var(--clx-spacing-lg) * -0.5);
    }

    .remember-me-label {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-sm);
        cursor: pointer;
        user-select: none;
    }

    .remember-checkbox {
        width: 18px;
        height: 18px;
        cursor: pointer;
        border-radius: var(--clx-radius-sm);
        border: 2px solid var(--clx-gray-400);
    }

    .remember-checkbox:checked {
        background-color: var(--clx-primary);
        border-color: var(--clx-primary);
    }

    .remember-text {
        font-size: 0.875rem;
        color: var(--clx-gray-600);
    }

    /* ============================================
       SUBMIT BUTTON
       ============================================ */
    .submit-button {
        width: 100%;
        height: 52px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: var(--clx-spacing-md);
        font-weight: 600;
        font-size: 1rem;
        transition: all var(--clx-transition-normal);
    }

    .submit-button:not(:disabled):hover {
        transform: translateY(-2px);
        box-shadow: var(--clx-shadow-lg);
    }

    .submit-button:not(:disabled):active {
        transform: translateY(0);
    }

    .submit-button:disabled {
        opacity: 0.7;
        cursor: not-allowed;
    }

    .button-content {
        display: flex;
        align-items: center;
        gap: var(--clx-spacing-sm);
    }

    /* ============================================
       REGISTER LINK
       ============================================ */
    .register-link {
        text-align: center;
        font-size: 0.875rem;
        color: var(--clx-gray-600);
    }

    .register-link a {
        color: var(--clx-primary);
        text-decoration: none;
        font-weight: 600;
        transition: color var(--clx-transition-fast);
    }

    .register-link a:hover {
        color: var(--clx-primary-hover);
        text-decoration: underline;
    }

    /* ============================================
       RESPONSIVE DESIGN
       ============================================ */
    @@media (max-width: 768px) {
        .login-page {
            padding: var(--clx-spacing-md);
        }

        .login-container {
            padding: var(--clx-spacing-lg);
        }

        .brand-icon {
            width: 64px;
            height: 64px;
        }

        .brand-icon svg {
            width: 32px;
            height: 32px;
        }

        .brand-name {
            font-size: 1.75rem;
        }

        .input-with-icon .form-control {
            height: 44px;
        }

        .submit-button {
            height: 48px;
        }
    }
</style>

@code {
    [SupplyParameterFromForm]
    private LoginModel _model { get; set; } = new();

    private bool _isLoading;

    [CascadingParameter]
    public HttpContext HttpContext { get; set; } = default!;

    private async Task HandleLogin()
    {
        _isLoading = true;

        try
        {
            var result = await _authService.ValidateCredentialsAsync(_model.Phone, _model.Password);

            if (!result.IsSuccess)
            {
                ToastService.ShowError(result.Error ?? "Invalid credentials");
                _isLoading = false;
                return;
            }

            var user = new BlazorAuthNoIdentity.LoggedInUserModel(
                result.UserId ?? 0,
                result.Fullname ?? string.Empty,
                result.Email ?? string.Empty,
                result.Phone ?? string.Empty,
                result.Role ?? string.Empty
            );

            var claims = user.ToClaims();
            const string AuthScheme = "clx-auth";

            var identity = new ClaimsIdentity(claims, AuthScheme);
            var principal = new ClaimsPrincipal(identity);

            var props = new AuthenticationProperties
            {
                IsPersistent = _model.RememberMe,
                ExpiresUtc = DateTimeOffset.UtcNow.AddHours(_model.RememberMe ? 72 : 8)
            };

            await HttpContext.SignInAsync(AuthScheme, principal, props);

            Logger.LogInformation("Login successful for {User}", _model.Phone);
            ToastService.ShowSuccess("Login successful! Redirecting...");

            HttpContext.Response.Redirect("/", false);
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error during login for {User}", _model.Phone);
            ToastService.ShowError("Unexpected error occurred. Try again.");
            _isLoading = false;
        }
    }
}
